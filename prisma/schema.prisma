generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DB_PRISMA_URL") // uses connection pooling
  directUrl = env("DB_URL_NON_POOLING")
}

model Format {
  id          String  @id @default(uuid()) @db.Uuid
  name        String  @unique
  lists       List[]
  description String
}

model List {
  id          String  @id @default(uuid()) @db.Uuid
  key         String  @unique
  name        String
  description String?
  format      Format? @relation(fields: [formatId], references: [id])
  formatId    String? @db.Uuid
  content     Json
  constraints String
  total       Int
  createdAt   DateTime @default(now())
  ownerId     String? 
  owner       User? @relation(fields: [ownerId], references: [id])
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  lists         List[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
